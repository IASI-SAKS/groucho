<!-- This file is part of GROUCHO, originally developed at CNR-IASI. For 
	more information visit: http://saks.iasi.cnr.it/tools/groucho This is free 
	software: you can redistribute it and/or modify it under the terms of the 
	GNU General Public License as published by the Free Software Foundation, 
	either version 3 of the License, or (at your option) any later version. This 
	software is distributed in the hope that it will be useful, but WITHOUT ANY 
	WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
	FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. 
	You should have received a copy of the GNU General Public License along with 
	this source. If not, see <http://www.gnu.org/licenses/>. -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.cnr.iasi.saks.groucho</groupId>
	<artifactId>lsh-invivo</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>lsh-invivo</name>
	<url>http://saks.iasi.cnr.it/tools/groucho</url>

	<parent>
		<groupId>it.cnr.iasi.saks.groucho</groupId>
		<artifactId>groucho</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<developers>
		<developer>
			<id>gulyx</id>
			<name>Guglielmo De Angelis</name>
		</developer>
		<developer>
			<id>brenomiranda</id>
			<name>Breno Miranda</name>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>GNU General Public License (GPL ver.3)</name>
			<url>http://www.gnu.org/licenses/gpl.txt</url>
		</license>
	</licenses>

	<properties>
		<junit.version>4.4</junit.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.7.12</slf4j.version>

		<jython-standalone-version>2.7.1</jython-standalone-version>
<!-- 		<jython-standalone-version>2.7.1b3</jython-standalone-version> -->
<!-- 		<jython-compile-maven-pluginVersion>2.0</jython-compile-maven-pluginVersion> -->
		<jython-compile-maven-pluginVersion>1.4</jython-compile-maven-pluginVersion>
		<jython-compile-maven-plugin.targetDirectory>${project.build.directory}/jython-plugins-tmp/</jython-compile-maven-plugin.targetDirectory>
		<jython-compile-maven-plugin.fakeJythonFile.directory>${basedir}/resources/</jython-compile-maven-plugin.fakeJythonFile.directory>
		<jython-compile-maven-plugin.fakeJythonFile>jython</jython-compile-maven-plugin.fakeJythonFile>

		<python.sources.directory>${basedir}/py</python.sources.directory>
		<python.target.directory>${project.build.directory}/py</python.target.directory>

		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-compiler-plugin.sourcesVersion>1.8</maven-compiler-plugin.sourcesVersion>
		<maven-compiler-plugin.targetVersion>1.8</maven-compiler-plugin.targetVersion>

		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>

        <org-codehaus-mojo.version>1.6.0</org-codehaus-mojo.version>
		
		<resources.version>3.1.0</resources.version>        
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython-standalone</artifactId>
			<version>${jython-standalone-version}</version>
		</dependency>
		
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifestFile>${basedir}/resources/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven-compiler-plugin.sourcesVersion}</source>
					<target>${maven-compiler-plugin.targetVersion}</target>
				</configuration>
			</plugin>

<!--             <plugin> -->
<!--                 <artifactId>maven-resources-plugin</artifactId> -->
<!--                 <version>${resources.version}</version> -->
<!--                 <executions> -->
<!--                     <execution> -->
<!--                         <id>copy-files-in-target</id> -->
<!--                         here the phase you need -->
<!--                         <phase>compile</phase> -->
<!--                         <goals> -->
<!--                             <goal>copy-resources</goal> -->
<!--                         </goals> -->
<!--                         <configuration> -->
<!--                             <outputDirectory>${basedir}/target/Lib</outputDirectory> -->
<!--                             <resources>           -->
<!--                                 <resource> -->
<!--                                     <directory>${python.sources.directory}</directory> -->
<!--                                     <includes> -->
<!--                                         <include>*.py</include> -->
<!--                                     </includes> -->
<!--                                     <filtering>false</filtering> -->
<!--                                 </resource> -->
<!--                             </resources>               -->
<!--                         </configuration>             -->
<!--                     </execution> -->
<!--                 </executions> -->
<!--             </plugin> -->
			
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${resources.version}</version>
                <executions>
                    <execution>
                        <id>copy-phyton-files-in-target</id>
<!--                         here the phase you need -->
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${python.target.directory}</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${python.sources.directory}</directory>
                                    <includes>
                                        <include>*.py</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                    <execution>
                        <id>copy-foo-jython-files-in-target-that-will-be-overwritten</id>
<!--                         here the phase you need -->
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${jython-compile-maven-plugin.targetDirectory}</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${jython-compile-maven-plugin.fakeJythonFile.directory}</directory>
                                    <includes>
                                        <include>${jython-compile-maven-plugin.fakeJythonFile}</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${org-codehaus-mojo.version}</version>
                <executions>
                   <execution>
                        <id>script-chmod</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>chmod</executable>
                            <arguments>
                                <argument>-R</argument>
                                <argument>+x</argument>
                                <argument>${jython-compile-maven-plugin.targetDirectory}/${jython-compile-maven-plugin.fakeJythonFile}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
             </plugin>                        
			<plugin>
				<groupId>net.sf.mavenjython</groupId>
				<artifactId>jython-compile-maven-plugin</artifactId>
				<version>${jython-compile-maven-pluginVersion}</version>
				<executions>
					<execution>
						<id>packaging</id>
						<phase>package</phase>
						<goals>
							<goal>jython</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<libraries>
<!-- 	*					<param>-REMOVE_THIS_SPACE-index-url=https://pypi.python.org/simple/</param> -->
						<param>--index-url=https://pypi.python.org/simple/</param>
<!-- 	*					<param>requests&lt;2.12.0</param> -->
<!-- 	*					<param>pytest&lt;3.0</param> -->

						<param>setuptools</param>
<!-- <param>XXHASH_LINK_SO=1</param> -->
						<param>xxhash</param>
<!-- 						<param>lxml</param> -->
<!-- 						<param>Scrappy</param> -->
<!-- 	*					<param>nose</param> -->
					</libraries>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
