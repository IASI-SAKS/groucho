/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package it.cnr.iasi.saks.groucho.lsh.rest.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-07-02T22:49:41.406+02:00")

@Api(value = "isunknown", description = "the isunknown API")
public interface IsunknownApi {

    @ApiOperation(value = "Check if a given state has been previously observed", nickname = "isStateUnknown", notes = "Returns TRUE if a State has been never observed, FALSE otherwise", tags={ "isStateUnknown", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Operation."),
        @ApiResponse(code = 400, message = "Invalid State Supplied."),
        @ApiResponse(code = 404, message = "Check Exception, State not found.") })
    @RequestMapping(value = "/isunknown",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Void> isStateUnknown(@ApiParam(value = "The Actual Internal Representation as a String of the Considered State" ,required=true )  @Valid @RequestBody String body);


    @ApiOperation(value = "Check if a given state has been previously observed", nickname = "isStateUnknownLSH", notes = "Returns TRUE if a State has been never observed, FALSE otherwise. The input parameter is supposed to be a codification in LSH of the actual internal state representation.", tags={ "isStateUnknown", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Operation"),
        @ApiResponse(code = 400, message = "Invalid LSH State Supplied"),
        @ApiResponse(code = 404, message = "Check Exception, LSH State not found") })
    @RequestMapping(value = "/isunknown/{stateStringLSH}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> isStateUnknownLSH(@ApiParam(value = "LSH String of Considered State.",required=true) @PathVariable("stateStringLSH") String stateStringLSH);

}
